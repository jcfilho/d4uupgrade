<?php




$objectManager = \Magento\Framework\App\ObjectManager::getInstance();
$appState = $objectManager->get(\Magento\Framework\App\State::class);
$layerResolver = $objectManager->get(\Magento\Catalog\Model\Layer\Resolver::class);
//$layerResolvers = $layerResolver->create('search');
$layerResolvers1 = $layerResolver->get();
/** @var \Magento\Catalog\Model\ResourceModel\Product\Collection $productCollection */
$productCollection = $layerResolvers1->getProductCollection();



//$objectManager = \Magento\Framework\App\ObjectManager::getInstance();
//$storeManager = $objectManager->get('\Magento\Store\Model\StoreManagerInterface');
//
//$currentCat = $objectManager->get('\Magento\Framework\Registry');
///** @var \Magento\Catalog\Model\Category $currentCategory */
//$currentCategory = $currentCat->registry('current_category');
//$catUrl = $currentCategory->getUrl(); //Get Current Category
$catUrl = '';



//$block->getCurrentUrl();

//$a = $layerResolvers1->getProductCollection()->addAttributeToSort('final_price', 'desc')->getFirstItem();
//$b = $layerResolvers1->getProductCollection()->addAttributeToSort('final_price', 'asc')->getFirstItem();

//$maxPriceasd = $productCollection->addAttributeToFilter('name',['eq' => 'Rio Full Day City Tour']);

//$tags->getSelect()->reset(Zend_Db_Select::ORDER);

$productCollection->getSelect()->reset(Zend_Db_Select::ORDER);

$a = $productCollection->setOrder('price', 'desc');
$a1 = $productCollection->getFirstItem()->getData();

$productCollection->getSelect()->reset(Zend_Db_Select::ORDER);
$b = $productCollection->setOrder('price', 'asc');
$b1 = $productCollection->getFirstItem()->getData();


$maxPrice = $productCollection->setOrder('price', 'desc')->getFirstItem()->getFinalPrice();
$minPrice = $productCollection->setOrder('price', 'asc')->getFirstItem()->getFinalPrice();


$params = $this->getRequest()->getParams();
$currentPriceFilter = @$params['price'];
$currentMin = @explode('-', $currentPriceFilter)[0];
$currentMin = ($currentMin !== NULL && (float)$currentMin >= $minPrice) ? $currentMin : $minPrice;
$currentMax = @explode('-', $currentPriceFilter)[1];
$currentMax = ($currentMax !== NULL && (float)$currentMax <= $maxPrice) ? (float)$currentMax - 0.01 : $maxPrice;
$params['price'] = '';
unset($params['id']);
$currencysymbol= $objectManager
    ->get('Magento\Store\Model\StoreManagerInterface');
$currencyCodeBase = $currencysymbol->getStore()->getCurrentCurrencyCode();
$currency  = $objectManager
    ->create('Magento\Directory\Model\CurrencyFactory')
    ->create()->load($currencyCodeBase);
    $currencySymbol= $currency->getCurrencySymbol();
?>

<div data-role="collapsible" class="filter-options-item">
    <div class="filter-price" data-role="collapsible">
        <div data-role="title" class="filter-options-title"><?php echo __('Price') ?></div>
        <div data-role="content" class="content filter-options-content">
            <div id="slider-range"></div>
            <form>
                <div class="field-amount">
                    <span class="unit"><?= $currencySymbol ?></span>
                    <span id="min-amount"></span>
                </div>
                <span>-</span>
                <div class="field-amount">
                    <span class="unit"><?= $currencySymbol ?></span>
                    <span id="max-amount"></span>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
    require([
        'jquery',
        'jquery/jquery-ui'
    ], function ($) {
        'use strict';
        var max_price = parseInt(<?= ceil($maxPrice) ?>);
        var min_price = parseInt(<?= floor($minPrice) ?>);
        var url_current_param = $.parseJSON('<?php echo json_encode($params) ?>');
        $("#min-amount").html(parseInt(<?= floor($currentMin) ?>));
        $("#max-amount").html(parseInt(<?= ceil($currentMax) ?>));
        var minamount = $("#min-amount").html();
        var maxamount = $("#max-amount").html();
        var baseUrl = '<?php echo $catUrl ?>?';
        var filter_url;
        var price_filter;
        price_filter = minamount + '-' + parseFloat(parseInt(maxamount) + 0.01);
        url_current_param.price = price_filter;
        filter_url = baseUrl + $.param(url_current_param);
        $("#slider-range").slider({
            range: true,
            min: min_price,
            max: max_price,
            values: [minamount, maxamount],
            slide: function (event, ui) {
                delay(function () {
                    $("#min-amount").html($("#slider-range").slider("values", 0));
                    $("#max-amount").html($("#slider-range").slider("values", 1));
                    minamount = $("#slider-range").slider("values", 0);
                    maxamount = $("#slider-range").slider("values", 1);
                    price_filter = minamount + '-' + parseFloat(parseInt(maxamount) + 0.01);
                    url_current_param.price = price_filter;
                    filter_url = baseUrl + $.param(url_current_param);
                }, 0);
            },
            stop: function () {
                $("#min-amount").html($("#slider-range").slider("values", 0));
                $("#max-amount").html($("#slider-range").slider("values", 1));
                minamount = $("#slider-range").slider("values", 0);
                maxamount = $("#slider-range").slider("values", 1);
                price_filter = minamount + '-' + parseFloat(parseInt(maxamount) + 0.01);
                url_current_param.price = price_filter;
                filter_url = baseUrl + $.param(url_current_param);
                window.location.href = filter_url;
            }
        });
        var delay = (function () {
            var timer = 0;
            return function (callback, ms) {
                clearTimeout(timer);
                timer = setTimeout(callback, ms);
            };
        })();
        $('.filter-price label.title').click(function () {
            $(this).parent('.filter-price').toggleClass('active');
        });
    });

</script>