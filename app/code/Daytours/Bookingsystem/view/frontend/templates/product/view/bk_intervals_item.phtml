
<?php $bookingId = $this->getRequest()->getParam('booking_id',0); ?>
<?php $itemId = $this->getRequest()->getParam('itemId',0); ?>
<?php $urlBooking = $block->getBookingItenrUrl($bookingId,$itemId); ?>
<?php $dataIntervals = $block->getListIntervals();  ?>
<?php $intervals = $dataIntervals['data'];  ?>
<?php $error = $dataIntervals['error'];  ?>
<?php $showCalendar = $block->getBkHelperDate()->getFieldSetting('bookingsystem/setting/show_calendar') ?>
<ul class="list-intervals-hours" >
<?php if(count($intervals)) : ?>
	<?php foreach($intervals as $interval) : ?>
		
		<li id="txt-interval-<?php echo $interval['interval_id']; ?>" class="<?php echo $interval['class']; ?>">
		<span style="display: none">
			<input
				type="checkbox"
				<?php echo $interval['inter_checked']; ?>
				class="txt-hour-intervals cls-to-add-to-wishlist"
				id="txt-inter-<?php echo $interval['interval_id']; ?>"
				name="intervals_hours[]"
				value="<?php echo $interval['interval_id']; ?>"
				data-selector="optionsbooking[interval_one][<?= $interval['interval_id'] ?>]"
			/>
		</span>
		<?php echo $interval['time_text']; ?>
		</li>
	<?php endforeach; ?>
<?php else :  ?>
<span class="booking-result-error"><?php echo $error; ?></span>
<?php endif; ?>
</ul>
<script>
require([
			'jquery',
			'underscore'
		],
	function ($,jqueryUi,_){
		var showCalendar = '<?php echo $showCalendar; ?>';
		var urlBooking = '<?php echo $urlBooking; ?>';
		$('#time-intervals-hours li').click(function(){
			var intervalId = $(this).attr('id');
            intervalId = intervalId.replace('txt-interval-','');
			if($('#txt-inter-'+intervalId).is(":checked"))
			{
				$('#txt-inter-'+intervalId).prop('checked',false).trigger('change');
				$(this).removeClass('item-interval-active');
			}
			else
			{
				$('#txt-inter-'+intervalId).prop('checked',true).trigger('change');
				$(this).addClass('item-interval-active');
			}
			getIntervalsResult();
		});
		var checkInter = false;
		$('.txt-hour-intervals').each(function(){
			if($(this).is(":checked"))
			{
				checkInter = true;
				return false;
			}
		});
		if(checkInter && showCalendar != '1')
		{
			getIntervalsResult();
		}
		
		function getIntervalsResult()
		{
			var checkIn = $('#check-in').val(); 
			if($.trim(checkIn) == '')
			{
				return false;
			}
			if(!checkRequiredAddons())
			{
				return false;
			}
			$('#booking-loader').css('display','block');
			$('.booking-results').html('');
			$.ajax({
				url : urlBooking,
				dataType : 'json',
				type : 'POST',
				data : $('#product_addtocart_form').serialize(),
				success : function(res)
				{
					$('.booking-results').html(res.html_result);
					var tempCheckIn = $('#temp-check-in').val();
					selectedDays(tempCheckIn,tempCheckIn);
					$('#booking-loader').css('display','none');
				},
				error : function()
				{
					
				}
			});
		}
		function checkRequiredAddons()
		{
			var okAddons = true;
			if($('.txt-addons-item').length)
			{
				$('.txt-addons-item').each(function(){
					var strClass = $(this).attr('class');
					if(strClass.indexOf('required-empty') > -1 && ($.trim($(this).val()) == '' || isNaN($(this).val())))
					{
						okAddons = false;
						return false;
					}
				});
			}
			if(okAddons && $('.select-addons-item').length)
			{
				$('.select-addons-item').each(function(){
					var strClass = $(this).attr('class');
					if(strClass.indexOf('required-empty') > -1 && ($.trim($(this).val()) == ''))
					{
						okAddons = false;
						return false;
					}
				});
			}
			if(okAddons && $('.bk-addon-radio-checkbox').length)
			{
				$('.bk-addon-radio-checkbox').each(function(){
					var strClass = $(this).attr('class');
					var strCkId = $(this).attr('id');
					if(strClass.indexOf('required-empty') > -1)
					{
						var tempCkOk = false;
						$('#'+strCkId +' input').each(function(){
							if($(this).is(":checked"))
							{
								tempCkOk = true;
								return false;
							}
						});
						if(tempCkOk == false)
						{
							okAddons = false;
							return false;
						}
					}
				});
			}
			return okAddons;
		}
		function selectedDays(date1,date2)
		{
			$('.day-selected').removeClass('day-selected');
			if(date2 == '')
				return false;
			var date1 = new Date(date1);
			var date2 = new Date(date2);
			var timeDiff = Math.abs(date2.getTime() - date1.getTime());
			var oneDay = 1000 * 3600 * 24;
			var day1 = date1.getTime();
			var day2 = date2.getTime();
			if(date1.getTime() > date2.getTime())
			{
				day1 = date2.getTime();
				day2 = date1.getTime();
			}
			while(day1 <= day2)
			{
				var objDate = new Date(day1);
				var month = objDate.getMonth() + 1;
				month = month >= 10 ? month : '0'+month;
				strDay = objDate.getDate() >= 10 ? objDate.getDate() : '0'+objDate.getDate();
				var strDate = objDate.getFullYear()+'-'+month+'-'+strDay;
				if($('#0_'+strDate).length)
				{
					$('#0_'+strDate).addClass('day-selected');
				}
				if($('#2_'+strDate).length)
				{
					$('#2_'+strDate).addClass('day-selected');
				}
				if($('#1_'+strDate).length)
				{
					$('#1_'+strDate).addClass('day-selected');
				}
				day1 += oneDay;
			}
		}

		function loadIntervalFromWishlist(){
			if($('#time-intervals-hours').html() != ''){
				var intervals = $('#exist-wishlist-intervarl-one').val();
				if( intervals != '' ){
					if( intervals.indexOf(",") > -1  ){
						var arraySplit = intervals.split(",");
						var checkedIntervals = $('#time-intervals-hours :checkbox');
						$.each(checkedIntervals,function(index,item){
							if( arraySplit.indexOf($(item).val()) > -1 ){
								$(item).prop('checked',true);
								$(item).parents('.item-interval-available').addClass('item-interval-active');
							}
						});
					}else{
						$('#txt-interval-' + intervals + ' :checkbox').prop('checked',true)
							.parents('.item-interval-available').addClass('item-interval-active');
					}
					getIntervalsResult();
					$('#exist-wishlist-intervarl-one').val('');
				}
			}

		}
		loadIntervalFromWishlist();
	})
</script>